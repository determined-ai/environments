FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu16.04

RUN rm -f /etc/apt/sources.list.d/*
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

RUN mkdir -p /etc/pedl/conda.d
RUN mkdir -p /var/run/sshd
RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		autoconf \
		automake \
		autotools-dev \
		build-essential \
		ca-certificates \
		curl \
		libkrb5-dev \
		libssl-dev \
		libtool \
		git \
		krb5-user \
		cmake \
		g++-4.8 \
		libnccl-dev \
		libnccl2 \
		make \
		openssh-client \
		openssh-server \
		pkg-config \
		wget \
	&& rm -rf /var/lib/apt/lists/*

ARG CONDA_DIR="/opt/conda"
ARG CONDA_INSTALLER="Miniconda3-4.7.10-Linux-x86_64.sh"
ARG CONDA_MD5="1c945f2b3335c7b2b15130b1b2dc5cf4"
ARG CONDA_URL="https://repo.continuum.io/miniconda"
ENV CONDA_DIR="${CONDA_DIR}" PATH="${CONDA_DIR}/bin:${PATH}"

RUN cd /tmp \
 && mkdir -p "${CONDA_DIR}" \
 && curl --retry 3 -fsSL -O "${CONDA_URL}/${CONDA_INSTALLER}" \
 && echo "${CONDA_MD5}  ${CONDA_INSTALLER}" | md5sum -c - \
 && bash "./${CONDA_INSTALLER}" -u -b -p "${CONDA_DIR}" \
 && rm -f "./${CONDA_INSTALLER}"

ENV PYTHONUNBUFFERED=1 PYTHONFAULTHANDLER=1 PYTHONHASHSEED=0

RUN conda install python=3.6

COPY profiler /opt/pedl/profiler
# Stock pyflame writes stack traces only at the end of the sampling period.
# Patch pyflame to have a new option that periodically dumps stack traces to
# facilitate profiling long running programs.
RUN mkdir -p /build \
  && cd /build \
  && curl -fsSL https://github.com/uber/pyflame/archive/v1.6.7.tar.gz | tar xzvf - \
  && cd /build/pyflame-1.6.7 \
  && patch -p1 < /opt/pedl/profiler/pyflame-add-output-rate.patch \
  && patch -p1 < /opt/pedl/profiler/pyflame-fix-for-conda.patch \
  && ./autogen.sh \
  && PY36_CFLAGS='-I/opt/conda/include/python3.6m' \
     PY36_LIBS='-L/opt/conda/lib -lpython3.6m' \
     ./configure \
  && make install

COPY files/common-requirements.txt files/common-requirements.txt
RUN ${CONDA_DIR}/bin/python3.6 -m pip install -r files/common-requirements.txt
COPY files/harness-gpu-requirements.txt files/harness-gpu-requirements.txt
RUN ${CONDA_DIR}/bin/python3.6 -m pip install -r files/harness-gpu-requirements.txt -f https://download.pytorch.org/whl/torch_stable.html
COPY files/cli-requirements.txt files/cli-requirements.txt
RUN ${CONDA_DIR}/bin/python3.6 -m pip install -r files/cli-requirements.txt
COPY patches/. /opt/pedl/patches/.
RUN cd ${CONDA_DIR}/lib/python3.6/site-packages/tensorflow && find /opt/pedl/patches -name "tf1.14*" -print0 | xargs -0 -n 1 patch -p1 -i
RUN TORCH_CUDA_ARCH_LIST="3.7;6.0;6.1;6.2;7.0;7.5" pip install --no-cache-dir --global-option="--cpp_ext" --global-option="--cuda_ext" git+https://github.com/determined-ai/apex.git@37cdaf4ad57ab4e7dd9ef13dbed7b29aa939d061

ENV JUPYTER_CONFIG_DIR=/run/pedl/jupyter/config JUPYTER_CONFIG_DIR=/run/pedl/jupyter/config JUPYTER_DATA_DIR=/run/pedl/jupyter/data JUPYTER_RUNTIME_DIR=/run/pedl/jupyter/runtime

RUN git clone https://github.com/determined-ai/nccl.git /tmp/pedl_nccl\
 && (cd /tmp/pedl_nccl && git checkout -q 750520b1f458b6612955f23e0a0a40dc3e0856bd)\
 && make -C /tmp/pedl_nccl -j 4\
 && ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs\
 && HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITHOUT_MPI=1 HOROVOD_NCCL_HOME=/tmp/pedl_nccl/build HOROVOD_NCCL_LINK=STATIC pip install --no-cache-dir git+https://github.com/determined-ai/horovod.git@1c6dd68a990f7bdc992ef2f1438d81d7c537f5f8\
 && ldconfig\
 && rm -rf /tmp/pedl_nccl
